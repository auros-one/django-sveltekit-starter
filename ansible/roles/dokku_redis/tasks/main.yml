---
# Tasks for setting up Redis service

# Check if Redis service exists
- name: Check if Redis service exists
  command: dokku redis:list
  register: redis_services
  changed_when: false
  ignore_errors: yes

# Create Redis service name
- name: Set Redis service name
  set_fact:
    redis_name: "{{ project_name }}-redis"

# Create Redis service if it doesn't exist
- name: Create Redis service
  command: "dokku redis:create {{ redis_name }}"
  when: redis_name not in redis_services.stdout
  ignore_errors: yes

# Check if Redis is already linked to app
- name: Check if Redis is already linked to app
  command: "dokku redis:links {{ redis_name }}"
  register: redis_links
  changed_when: false
  ignore_errors: yes

# Link Redis to app
- name: Link Redis to app
  command: "dokku redis:link {{ redis_name }} {{ app_name }}"
  when: app_name not in redis_links.stdout
  ignore_errors: yes

# Set Redis environment variables explicitly
- name: Get Redis DSN
  shell: "dokku redis:info {{ redis_name }} | grep Dsn"
  register: redis_dsn
  changed_when: false
  ignore_errors: yes

- name: Extract Redis DSN value
  set_fact:
    redis_url: "{{ redis_dsn.stdout | regex_replace('.*Dsn:\\s+(.*)$', '\\1') | trim }}"
  when: redis_dsn.stdout is defined and redis_dsn.stdout != ""
  ignore_errors: yes

- name: Set Redis environment variables
  command: "dokku config:set --no-restart {{ app_name }} REDIS_URL='{{ redis_url }}' CELERY_BROKER_URL='{{ redis_url }}' CELERY_RESULT_BACKEND='{{ redis_url }}'"
  when: redis_url is defined and redis_url != ""
  ignore_errors: yes
