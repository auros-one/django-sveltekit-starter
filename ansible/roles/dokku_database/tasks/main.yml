---
# Tasks for setting up PostgreSQL database

# Create and configure PostgreSQL database
- name: Create PostgreSQL database service
  command: "dokku postgres:create '{{ db_name }}' --image-version {{ db_version }}"
  args:
    creates: "/var/lib/dokku/services/postgres/{{ db_name }}"
  register: db_create

# Expose PostgreSQL port for external access
- name: Expose PostgreSQL port for external tools
  command: "dokku postgres:expose '{{ db_name }}' 5432"
  register: postgres_expose
  changed_when: postgres_expose.rc == 0
  failed_when: false
  ignore_errors: yes

# Configure database backups to S3
- name: Configure S3 credentials for Postgres backups
  command: >
    dokku postgres:backup-auth {{ db_name }}
    {{ hetzner_s3_access_key }}
    {{ hetzner_s3_secret_key }}
    {{ s3_backup_bucket }}
    eu-central-1
    {{ s3_endpoint }}
  register: backup_auth_result
  changed_when: backup_auth_result.rc == 0
  failed_when: false

# Schedule daily backups in "short-term-backups/" (expire in 7 days)
- name: Schedule automated short-term database backups
  cron:
    name: "Dokku PostgreSQL short-term backup for {{ db_name }}"
    minute: "0"
    hour: "3"
    day: "*"
    month: "*"
    weekday: "*"
    job: "dokku /usr/bin/dokku postgres:backup {{ db_name }} {{ s3_backup_bucket }}/short-term-backups"
  register: backup_schedule_result
  failed_when: false

# Add long-term backup to system crontab (weekly on Sundays at 4 AM)
- name: Add long-term backup to system crontab
  cron:
    name: "Dokku PostgreSQL long-term backup for {{ db_name }}"
    minute: "0"
    hour: "4"
    day: "*"
    month: "*"
    weekday: "0"
    job: "dokku /usr/bin/dokku postgres:backup {{ db_name }} {{ s3_backup_bucket }}/long-term-backups"
  register: long_term_cron_result
  failed_when: false

# Install MinIO Client for managing S3 bucket lifecycle rules
- name: Download MinIO Client
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: '0755'
  register: minio_client_download

# Ensure MinIO Client is executable
- name: Ensure MinIO Client is executable
  file:
    path: /usr/local/bin/mc
    mode: '0755'
  register: mc_chmod

# Configure MinIO Client with Hetzner S3 credentials
- name: Configure MinIO Client alias for Hetzner
  shell: >
    mc alias set hetzner {{ s3_endpoint }} {{ hetzner_s3_access_key }} {{ hetzner_s3_secret_key }}
  register: minio_alias_result
  changed_when: minio_alias_result.rc == 0
  failed_when: false
  async: 60
  poll: 10

# Add lifecycle rule to expire short-term backups after 7 days
- name: Configure S3 bucket lifecycle rule for short-term backups
  shell: >
    mc ilm rule add --prefix "short-term-backups/" --expire-days 7 hetzner/{{ s3_backup_bucket }}
  register: short_term_lifecycle_result
  changed_when: short_term_lifecycle_result.rc == 0
  failed_when: false
  async: 60
  poll: 10
  when: minio_alias_result is defined and minio_alias_result.rc == 0

# Add lifecycle rule to expire long-term backups after 30 days
- name: Configure S3 bucket lifecycle rule for long-term backups
  shell: >
    mc ilm rule add --prefix "long-term-backups/" --expire-days 30 hetzner/{{ s3_backup_bucket }}
  register: long_term_lifecycle_result
  changed_when: long_term_lifecycle_result.rc == 0
  failed_when: false
  async: 60
  poll: 10
  when: minio_alias_result is defined and minio_alias_result.rc == 0

# Set Let's Encrypt email address
- name: Set Let's Encrypt email address
  command: "dokku letsencrypt:set '{{ app_name }}' email {{ lookup('env', 'LETSENCRYPT_EMAIL', default=lookup('env', 'DJANGO_SUPERUSER_EMAIL')) }}"
  ignore_errors: yes
  register: letsencrypt_email_result
  changed_when: letsencrypt_email_result.rc == 0
