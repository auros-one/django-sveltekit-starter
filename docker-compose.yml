volumes:
  db:
  redis-data:

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ENVIRONMENT: development
    command: python -m gunicorn
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    image: projectname-backend
    ports:
      - "8000:8000"
    restart: unless-stopped
    tty: true
    volumes:
      - .:/app

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ENVIRONMENT: development
    command: celery -A project worker --loglevel=info --autoscale=10,3
    depends_on:
      - redis
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    image: projectname-celery-worker
    restart: unless-stopped
    volumes:
      - .:/app

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ENVIRONMENT: development
    command: celery -A project beat --loglevel=info
    depends_on:
      - redis
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    image: projectname-celery-beat
    restart: unless-stopped
    volumes:
      - .:/app

  celery_flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ENVIRONMENT: development
    command: celery -A project flower --address=0.0.0.0 --port=5555 --url_prefix=flower
    depends_on:
      - redis
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    image: projectname-celery-flower
    ports:
      - "5555:5555"
    restart: unless-stopped
    volumes:
      - .:/app

  db:
    env_file:
      - .env
    image: postgres:14-alpine
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5420:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
