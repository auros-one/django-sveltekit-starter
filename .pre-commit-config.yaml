default_install_hook_types:
  - pre-commit
  - pre-merge-commit
  - pre-rebase
  - pre-push
default_stages:
  - pre-commit
  - pre-merge-commit
  - pre-rebase
  - pre-push
default_language_version:
  python: python3.11
repos:
  # General file checks (run on all files)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
        exclude: |
          (?x)^(
              backend/poetry\.lock|
              frontend/package-lock\.json
          )$
      - id: check-merge-conflict
      - id: end-of-file-fixer
      - id: trailing-whitespace

  # Backend-specific file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-ast
        files: ^backend/.*\.py$
      - id: check-toml
        files: ^backend/.*\.toml$
      - id: debug-statements
        files: ^backend/.*\.py$

  # Frontend-specific file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-json
        files: ^frontend/.*\.json$
      - id: check-yaml
        files: ^frontend/.*\.ya?ml$

  # Python Backend Tools (only run on backend Python files)
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.9.0
    hooks:
      - id: pyupgrade
        args: [--py311-plus]
        files: ^backend/.*\.py$

  - repo: https://github.com/adamchainz/django-upgrade
    rev: "1.14.0"
    hooks:
      - id: django-upgrade
        args: [--target-version, "4.2"]
        files: ^backend/.*\.py$

  - repo: https://github.com/pycqa/isort
    rev: "5.12.0"
    hooks:
      - id: isort
        name: isort (python)
        files: ^backend/.*\.py$
        args: [--settings-path=backend/pyproject.toml]

  - repo: https://github.com/psf/black
    rev: "24.1.0"
    hooks:
      - id: black
        files: ^backend/.*\.py$
        args: [--config=backend/pyproject.toml]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.280
    hooks:
      - id: ruff
        files: ^backend/.*\.py$
        args: [--config=backend/pyproject.toml]

  # Project-specific checks using local system tools
  - repo: local
    hooks:
      # Backend-specific checks
      - id: poetry-check
        name: poetry check
        language: system
        entry: bash -c 'cd backend && poetry check'
        files: ^backend/pyproject\.toml$
        pass_filenames: false

      - id: django-check
        name: django check
        language: system
        entry: bash -c 'cd backend && poetry run python manage.py check --deploy --fail-level WARNING'
        files: ^backend/.*\.py$
        pass_filenames: false

      # Frontend tools using system Node.js
      - id: frontend-prettier
        name: prettier (frontend)
        language: system
        entry: bash -c 'cd frontend && npm run format'
        files: ^frontend/.*\.(js|ts|json|svelte|html|css|md)$
        pass_filenames: false

      - id: frontend-eslint
        name: eslint (frontend)
        language: system
        entry: bash -c 'cd frontend && npm run lint'
        files: ^frontend/.*\.(js|ts|svelte)$
        pass_filenames: false

      # Type sync (runs when backend changes, updates frontend)
      - id: sync-types
        name: sync API types from backend
        language: system
        entry: bash -c 'cd frontend && npm run sync-types'
        files: ^backend/.*(models|serializers|views|urls).*\.py$
        pass_filenames: false
